
plugins {
    id "com.github.spotbugs" version "2.0.1"
    id 'application'
    id 'jacoco'
    id 'checkstyle'
 }

// Set source file (default path is src/main/java)
 sourceSets.main.java.srcDirs = ['src']
 application {
     mainClassName = 'main.Main'
 }

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {

    compile "junit:junit:4.12"

}

// Default test path is src/test/java
 test {
     useJUnit()
     maxHeapSize('1G')
 }

task printClasspath {
    doLast {
        configurations.testRuntime.each { println it }
    }
}

/////////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////////

 checkstyle {
     configFile(rootProject.file('config/checkstyle/checkstyle.xml'))
   // Keep checkstyle a little quieter
   ignoreFailures = true
   showViolations = false
 }

 tasks.withType(Checkstyle) {
   reports {
     html.enabled = true
     xml.enabled = false
   }
 }
 checkstyle {
     toolVersion = "8.8"
 }

///////////////////////////////////////////////////////////////////////////
// Configure Jacoco
///////////////////////////////////////////////////////////////////////////

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


///////////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////////

 spotbugs {
   toolVersion = '4.0.0-beta4'
 }
 // To generate an HTML report instead of XML
 tasks.withType(com.github.spotbugs.SpotBugsTask) {
     sourceSets {
         main {
             java.srcDirs = ['src/main']
         }
     }
     reports {
     xml.enabled = false
     html.enabled = true
   }

 }